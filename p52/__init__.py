# this is the entry point of the entire package.
# when you `import` this module from the python sketch you end up here
# this script is then responsible to compile to javascript the sketch it was imported from
# and launch the viewer


import inspect
import pathlib

from .compiler import compileSketch, launchRecompilerObserver
from .viewer import launchViewer
from .sketchClass import SketchInfo
from .reloader import launchReloadServer


# get the path of the sketch this script is imported from
try:
    importFile = inspect.stack()[-1]
    sketchPath = pathlib.Path(importFile.filename).resolve()

    # store useful info inside a sketch class (folder, name, temp folder to hold de compiled js and so on)
    sketch = SketchInfo(sketchPath)

    # launch the compile process
    compileSketch(sketch)

    # launch the services responsible for auto reload and recompile on save
    launchReloadServer()
    launchRecompilerObserver(sketch)

    # launch the viever
    launchViewer(sketch)

# TODO: make it work
except KeyboardInterrupt:
    print("should clean here")


# ----------------


# import definition files just to have autocomplete work in the sketch file
# these "import"s are only needed to have autocomplete inside the sketch
# these are never actually run by python (the execution of the python script itself terminates with the sys.exit(0) call
import sys

sys.exit(0)

from .static.p5definition import *  # original p5 definition
from .utils.p52 import *  # custom stuff I added


# empty definition of the transcrypt __new__ function, in order to have autocomplete inside the sketch
# la metto qui invece che dentro utils in modo da non dover fare __all__ = [...] anche dentro quel file
def __new__(cls):
    """instantiate a js class"""
    print(f"instantiating {cls}")
    return cls


# unfortunately I have to add all the exported name here just because otherwise "__new__" would not be exported
# it seems that I cannot do something like "__all__.extend(["__new__"])"

# NOTE: ogni volta che aggiungo qualche funzione a utils (o a p5definition) devo aggiornare __all__

__all__ = [
    "ADD",
    "ALT",
    "ARROW",
    "AUTO",
    "AXES",
    "BACKSPACE",
    "BASELINE",
    "BEVEL",
    "BEZIER",
    "BLEND",
    "BLUR",
    "BOLD",
    "BOLDITALIC",
    "BOTTOM",
    "BURN",
    "CENTER",
    "CHAR",
    "CHORD",
    "CLAMP",
    "CLOSE",
    "CONTAIN",
    "CONTROL",
    "CORNER",
    "CORNERS",
    "COVER",
    "CROSS",
    "CURVE",
    "DARKEST",
    "DEGREES",
    "DELETE",
    "DIFFERENCE",
    "DILATE",
    "DODGE",
    "DOWN_ARROW",
    "ENTER",
    "ERODE",
    "ESCAPE",
    "EXCLUSION",
    "FALLBACK",
    "FILL",
    "FLAT",
    "FLOAT",
    "GRAY",
    "GRID",
    "HALF_FLOAT",
    "HALF_PI",
    "HAND",
    "HARD_LIGHT",
    "HSB",
    "HSL",
    "IMAGE",
    "IMMEDIATE",
    "INVERT",
    "ITALIC",
    "LABEL",
    "LANDSCAPE",
    "LEFT",
    "LEFT_ARROW",
    "LIGHTEST",
    "LINEAR",
    "LINES",
    "LINE_LOOP",
    "LINE_STRIP",
    "MIRROR",
    "MITER",
    "MOVE",
    "MULTIPLY",
    "NEAREST",
    "NORMAL",
    "OPAQUE",
    "OPEN",
    "OPTION",
    "OVERLAY",
    "P2D",
    "PI",
    "PIE",
    "POINTS",
    "PORTRAIT",
    "POSTERIZE",
    "PROJECT",
    "QUADRATIC",
    "QUADS",
    "QUAD_STRIP",
    "QUARTER_PI",
    "RADIANS",
    "RADIUS",
    "REMOVE",
    "REPEAT",
    "REPLACE",
    "RETURN",
    "RGB",
    "RGBA",
    "RIGHT",
    "RIGHT_ARROW",
    "ROUND",
    "SCREEN",
    "SHIFT",
    "SMOOTH",
    "SOFT_LIGHT",
    "SQUARE",
    "STROKE",
    "SUBTRACT",
    "TAB",
    "TAU",
    "TESS",
    "TEXT",
    "TEXTURE",
    "THRESHOLD",
    "TOP",
    "TRIANGLES",
    "TRIANGLE_FAN",
    "TRIANGLE_STRIP",
    "TWO_PI",
    "UNSIGNED_BYTE",
    "UNSIGNED_INT",
    "UP_ARROW",
    "VERSION",
    "WAIT",
    "WEBGL",
    "WEBGL2",
    "WORD",
    "abs",
    "accelerationX",
    "accelerationY",
    "accelerationZ",
    "acos",
    "alpha",
    "ambientLight",
    "ambientMaterial",
    "angleMode",
    "applyMatrix",
    "arc",
    "asin",
    "atan",
    "atan2",
    "background",
    "beginClip",
    "beginContour",
    "beginGeometry",
    "beginShape",
    "bezier",
    "bezierDetail",
    "bezierPoint",
    "bezierTangent",
    "bezierVertex",
    "blend",
    "blendMode",
    "blue",
    "boolean",
    "box",
    "brightness",
    "buildGeometry",
    "byte",
    "camera",
    "ceil",
    "changed",
    "char",
    "circle",
    "clear",
    "clearStorage",
    "clip",
    "color",
    "colorMode",
    "cone",
    "constrain",
    "copy",
    "cos",
    "createA",
    "createAudio",
    "createButton",
    "createCamera",
    "createCanvas",
    "createCapture",
    "createCheckbox",
    "createColorPicker",
    "createDiv",
    "createElement",
    "createFileInput",
    "createFilterShader",
    "createFramebuffer",
    "createGraphics",
    "createImage",
    "createImg",
    "createInput",
    "createNumberDict",
    "createP",
    "createRadio",
    "createSelect",
    "createShader",
    "createSlider",
    "createSpan",
    "createStringDict",
    "createVector",
    "createVideo",
    "createWriter",
    "cursor",
    "curve",
    "curveDetail",
    "curvePoint",
    "curveTangent",
    "curveTightness",
    "curveVertex",
    "cylinder",
    "day",
    "debugMode",
    "degrees",
    "deltaTime",
    "describe",
    "describeElement",
    "deviceMoved",
    "deviceOrientation",
    "deviceShaken",
    "deviceTurned",
    "directionalLight",
    "disableFriendlyErrors",
    "displayDensity",
    "displayHeight",
    "displayWidth",
    "dist",
    "doubleClicked",
    "draw",
    "drawingContext",
    "ellipse",
    "ellipseMode",
    "ellipsoid",
    "emissiveMaterial",
    "endClip",
    "endContour",
    "endGeometry",
    "endShape",
    "erase",
    "exitPointerLock",
    "exp",
    "fill",
    "filter",
    "float",
    "floor",
    "focused",
    "fract",
    "frameCount",
    "frameRate",
    "freeGeometry",
    "frustum",
    "fullscreen",
    "get",
    "getItem",
    "getTargetFrameRate",
    "getURL",
    "getURLParams",
    "getURLPath",
    "green",
    "gridOutput",
    "height",
    "hex",
    "hour",
    "httpDo",
    "httpGet",
    "httpPost",
    "hue",
    "image",
    "imageLight",
    "imageMode",
    "input",
    "int",
    "isLooping",
    "join",
    "key",
    "keyCode",
    "keyIsDown",
    "keyIsPressed",
    "keyPressed",
    "keyReleased",
    "keyTyped",
    "lerp",
    "lerpColor",
    "lightFalloff",
    "lightness",
    "lights",
    "line",
    "loadBytes",
    "loadFont",
    "loadImage",
    "loadJSON",
    "loadModel",
    "loadPixels",
    "loadShader",
    "loadStrings",
    "loadTable",
    "loadXML",
    "log",
    "loop",
    "mag",
    "map",
    "match",
    "matchAll",
    "max",
    "millis",
    "min",
    "minute",
    "model",
    "month",
    "mouseButton",
    "mouseClicked",
    "mouseDragged",
    "mouseIsPressed",
    "mouseMoved",
    "mousePressed",
    "mouseReleased",
    "mouseWheel",
    "mouseX",
    "mouseY",
    "movedX",
    "movedY",
    "nf",
    "nfc",
    "nfp",
    "nfs",
    "noCanvas",
    "noCursor",
    "noDebugMode",
    "noErase",
    "noFill",
    "noLights",
    "noLoop",
    "noSmooth",
    "noStroke",
    "noTint",
    "noise",
    "noiseDetail",
    "noiseSeed",
    "norm",
    "normal",
    "normalMaterial",
    "orbitControl",
    "ortho",
    "p5",
    "pAccelerationX",
    "pAccelerationY",
    "pAccelerationZ",
    "pRotationX",
    "pRotationY",
    "pRotationZ",
    "perspective",
    "pixelDensity",
    "pixels",
    "plane",
    "pmouseX",
    "pmouseY",
    "point",
    "pointLight",
    "pop",
    "pow",
    "preload",
    "print",
    "push",
    "pwinMouseX",
    "pwinMouseY",
    "quad",
    "quadraticVertex",
    "radians",
    "random",
    "randomGaussian",
    "randomSeed",
    "rect",
    "rectMode",
    "red",
    "redraw",
    "remove",
    "removeElements",
    "removeItem",
    "requestPointerLock",
    "resetMatrix",
    "resetShader",
    "resizeCanvas",
    "rotate",
    "rotateX",
    "rotateY",
    "rotateZ",
    "rotationX",
    "rotationY",
    "rotationZ",
    "round",
    "saturation",
    "save",
    "saveCanvas",
    "saveFrames",
    "saveGif",
    "saveJSON",
    "saveStrings",
    "saveTable",
    "scale",
    "second",
    "select",
    "selectAll",
    "set",
    "setAttributes",
    "setCamera",
    "setMoveThreshold",
    "setShakeThreshold",
    "setup",
    "shader",
    "shearX",
    "shearY",
    "shininess",
    "shuffle",
    "sin",
    "smooth",
    "specularColor",
    "specularMaterial",
    "sphere",
    "split",
    "splitTokens",
    "spotLight",
    "sq",
    "sqrt",
    "square",
    "storeItem",
    "str",
    "stroke",
    "strokeCap",
    "strokeJoin",
    "strokeWeight",
    "tan",
    "text",
    "textAlign",
    "textAscent",
    "textDescent",
    "textFont",
    "textLeading",
    "textOutput",
    "textSize",
    "textStyle",
    "textWidth",
    "textWrap",
    "texture",
    "textureMode",
    "textureWrap",
    "tint",
    "torus",
    "touchEnded",
    "touchMoved",
    "touchStarted",
    "touches",
    "translate",
    "triangle",
    "trim",
    "turnAxis",
    "unchar",
    "unhex",
    "updatePixels",
    "vertex",
    "vertexNormal",
    "webglVersion",
    "width",
    "winMouseX",
    "winMouseY",
    "windowHeight",
    "windowResized",
    "windowWidth",
    "year",
    "self",
    "__new__",
    "injectJs",
    "canvas",
    "pop",
    "center",
    "map",
]


# ----

# TODO:
# come far funzionare "pop", "map" e simili (al momento sono metodi di python, non di p5js)?
#    sono riuscito a fare qualcosa dentro utils.p52.
#    al momento ho reimplementato map, ma in questo modo sovrascrivo pymap
#    continuare a testare per capire  se si rompe qualcos'altro


# come integrare eventuali altre librerie javascript??
# per i file che esportano attributi basta fare import(lib.js), che Ã¨ supportato da tranascrypt
# per gli altri file ho implementato la funzione "injectJs"


# come modificare comportamenti di p5js direttamente a runtime (ad esempio cambiare le coordinate)?
#    BOH, penso impossibile, bisognerebbe accedere al runtime di p5js... che perÃ² mentre sto compilando
#    ancora non esiste...
